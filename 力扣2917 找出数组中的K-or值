/*
给你一个下标从 0 开始的整数数组 nums 和一个整数 k 。
nums 中的 K-or 是一个满足以下条件的非负整数：
只有在 nums 中，至少存在 k 个元素的第 i 位值为 1 ，那么 K-or 中的第 i 位的值才是 1 。
返回 nums 的 K-or 值。
注意 ：对于整数 x ，如果 (2i AND x) == 2i ，则 x 中的第 i 位值为 1 ，其中 AND 为按位与运算符。
*/

class Solution {
public:
    int findKOr(vector<int>& nums, int k) {
       if(nums.size()==k){
           int res = nums[0];
           for(int i = 1;i<nums.size();i++){
               res = res&nums[i];
           }
           return res;
       }else if(k==1){
           int res = nums[0];
           for(int i = 1;i<nums.size();i++){
               res = res|nums[i];
           }
           return res;
       }else{
           int tmp[10000];
           int m=0;
           for(int i = 0;i<31;i++){
                int cnt = 0;
                int p = pow(2,i);
                for(int j = 0;j<nums.size();j++){
                    if((p&nums[j])==p)    cnt++;
                }
                if(cnt>=k)  tmp[m++]=i;
           }
           int res=0;
           for(int i = 0;i<m;i++){
               res += pow(2,tmp[i]);
           }
           return res;
       }
    }
};
