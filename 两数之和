给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target  的那 两个 整数，并返回它们的数组下标。
你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。
你可以按任意顺序返回答案。

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        map<int,int> map1;
        vector<int> res;
        map1[nums[0]] = 0;//将第一个元素存入map中
        for(int i=1;i<nums.size();i++){//从第二个元素开始循环，判断在map中是否存在target-num[i]的值，如果有，向vector中插入两个数的下标，即为map的value值
            if(map1.count(target-nums[i])){
                res.push_back(map1[target-nums[i]]);
                res.push_back(i);
            }map1[nums[i]] = i;
        }
        return res;
    }
};
