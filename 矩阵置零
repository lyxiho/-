给定一个 m x n 的矩阵，如果一个元素为 0 ，则将其所在行和列的所有元素都设为 0 。请使用 原地 算法。
输入：matrix = [[1,1,1],[1,0,1],[1,1,1]]
输出：[[1,0,1],[0,0,0],[1,0,1]]

class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        int m = matrix.size();
        int n = matrix[0].size();
        vector<int> row;//存放行下标
        vector<int> col;//存放列下标

        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(matrix[i][j]==0){
                    row.push_back(i);
                    col.push_back(j);
                }
            }
        }
        for(int i:row){
            for(int j=0;j<n;j++)    matrix[i][j]=0;
        }
        for(int i:col){
            for(int j=0;j<m;j++)    matrix[j][i]=0;
        }

    }
};

//知识点补充 - 对vector嵌套vector的遍历，运用迭代器
//需要迭代器内部嵌套迭代器
vector<vector<int>> arr = {{0,1,2,0},{3,4,5,2},{1,3,1,5}};

for(vector<vector<int> >::iterator it=matrix.begin();it!=matrix.end();it++)
{
    //(*it)是个vector<int>型的小容器
    //故要再创建相应的迭代器才能访问其中元素
    for(vector<int>::iterator vit=(*it).begin();vit!=(*it).end();vit++)
         cout<<*vit<<" ";
     cout<<endl;
}
