给定一个整数数组 nums，将数组中的元素向右轮转 k 个位置，其中 k 是非负数。
输入: nums = [1,2,3,4,5,6,7], k = 3
输出: [5,6,7,1,2,3,4]
解释:
向右轮转 1 步: [7,1,2,3,4,5,6]
向右轮转 2 步: [6,7,1,2,3,4,5]
向右轮转 3 步: [5,6,7,1,2,3,4]

class Solution {
public:
    void rotate(vector<int>& nums, int k) {
        vector<int> tmp;
        int cnt = nums.size();
        int i=0,j=0;
        k=k%nums.size();//此处，为了防止数组一共2个元素，k却为3时
        while(cnt){
            int pos = nums.size()-k+i;
            if(pos>=nums.size()){
                pos=j++;
            }
            tmp.push_back(nums[pos]);
            i++;
            cnt--;
        }
        for(int i=0;i<nums.size();i++){
            nums[i]=tmp[i];
        }
    }
};
