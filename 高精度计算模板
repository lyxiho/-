/。输入两个数字字符串，将字符串从个位开始依次存入vector中，再进行高精度运算
//加法
#include<iostream>
#include<vector>
using namespace std;


vector<int> add(vector<int> &A,vector<int> &B){
    vector<int>C;

    int t=0;//进位
    for(int i=0;i<A.size()||i<B.size();i++){
        if(i<A.size())  t+=A[i];
        if(i<B.size())  t+=B[i];
        C.push_back(t%10);
        t/=10;
    }

    if(t) C.push_back(1);//如果t仍大于零，说明在最前面加上一个1
    return C;
}
int main(){
    string a,b;
    cin>>a>>b;  
    vector<int> A,B;
    for(int i=a.size()-1;i>=0;i--)   A.push_back(a[i]-'0');
    for(int i=b.size()-1;i>=0;i--)   B.push_back(b[i]-'0');

    auto c = add(A,B);

    for(int i=c.size()-1;i>=0;i--) printf("%d",c[i]);

    return 0;
}
-------------------------------------------------------------------------------------
//减法
#include<iostream>
#include<vector>
using namespace std;

//判断A是否大于B
bool cmp(vector<int> &a,vector<int> &b){
    if(a.size()!=b.size())  return a.size()>b.size();//如果A的位数与B不相等 直接返回

    for(int i=a.size()-1;i>=0;i++){
        if(a[i]!=b[i])  return a[i]>b[i];
    }
    return true;
}
vector<int> sub(vector<int> &a,vector<int> &b){
    vector<int> C;
    for(int i=0,t=0;i<a.size()||i<b.size();i++){
        t = a[i]-t;
        if(i<b.size())  t-=b[i];//如果b中还有元素，减去b[i]
        C.push_back((t+10)%10);//t>0，直接返回t,t<0，返回t+10，故可以统一写成(t+10)%10
        if(t<0) t=1;//当t<0时，借位变为1
        else t=0;
    }
    while(C.size()>1&&C.back()==0)  C.pop_back(); //清除前导0
    return C;
}

int main(){
    string a,b;
    vector<int> A,B;
    cin>>a>>b;

    for(int i=a.size()-1;i>=0;i--){
        A.push_back(a[i]-'0');
    }
    for(int i=b.size()-1;i>=0;i--){
        B.push_back(b[i]-'0');
    }

    //判断A是否大于B
    if(cmp(A,B)){
        auto C = sub(A,B);
        for(int i=C.size()-1;i>=0;i--)  cout<<C[i];
    }else{
        auto C = sub(B,A);
        cout<<"-";
        for(int i=C.size()-1;i>=0;i--)  cout<<C[i];
    }

    return 0;
}
--------------------------------------------------------------------------
//乘法
#include<bits/stdc++.h>
using namespace std;

vector<int> mul(vector<int>A,int b){
    vector<int> C;
    int t=0;//  进位 
    for(int i=0;i<A.size()||t;i++){
        if(i<A.size())  t+=A[i]*b;
        C.push_back(t%10);
        t/=10;
    }
    return C;
}
int main(){
    string a;
    int b;
    cin>>a>>b;
    vector<int>A;
    for(int i=a.size()-1;i>=0;i--)  A.push_back(a[i]-'0');

    auto C = mul(A,b);
    
    for(int i=C.size()-1;i>=0;i--){
        cout<<C[i];
    }

    return 0;
}
